#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url="/"
demo_user=$YNH_APP_ARG_DEMO_USER
demo_password=$YNH_APP_ARG_DEMO_PASSWORD
demo_package=$YNH_APP_ARG_DEMO_PACKAGE

app=$YNH_APP_INSTANCE_NAME

yunohost_password="$demo_password"

lxc_name1="yunohost-demo1"
lxc_name2="yunohost-demo2"

lxdbr_demo_name="lxdbrdemo"

lxdbr_demo_network="10.1.5"
lxc_ip1=".3"
lxc_ip2=".4"

DIST="bullseye"
ARCH="amd64"
YNH_BRANCH="stable"
lxc_base="ynh-dev-$DIST-$ARCH-$YNH_BRANCH-base"

time_to_switch=30

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=1

final_path=/opt/yunohost/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=1

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=demo_user --value=$demo_user
ynh_app_setting_set --app=$app --key=demo_password --value=$demo_password
ynh_app_setting_set --app=$app --key=demo_password --value=$demo_package
ynh_app_setting_set --app=$app --key=lxc_name1 --value=$lxc_name1
ynh_app_setting_set --app=$app --key=lxc_name2 --value=$lxc_name2
ynh_app_setting_set --app=$app --key=lxdbr_demo_name --value=$lxdbr_demo_name
ynh_app_setting_set --app=$app --key=lxdbr_demo_network --value=$lxdbr_demo_network
ynh_app_setting_set --app=$app --key=lxc_ip1 --value=$lxc_ip1
ynh_app_setting_set --app=$app --key=lxc_ip2 --value=$lxc_ip2
ynh_app_setting_set --app=$app --key=DIST --value=$DIST
ynh_app_setting_set --app=$app --key=ARCH --value=$ARCH
ynh_app_setting_set --app=$app --key=YNH_BRANCH --value=$YNH_BRANCH
ynh_app_setting_set --app=$app --key=time_to_switch --value=$time_to_switch

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=1

ynh_install_app_dependencies $pkg_dependencies
ynh_install_apps --apps="$app_dependencies"

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --weight=1

# Create a system user
ynh_system_user_create --username=$app --home_dir="$final_path"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=1

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_exec_warn_less git init "$final_path"
pushd "$final_path"
	ynh_exec_warn_less git remote add origin "$demo_repository"
	ynh_exec_warn_less git fetch --quiet --depth=1 origin "$demo_release"
	ynh_exec_warn_less git reset --quiet --hard FETCH_HEAD
popd
cp ynh_lxd "$final_path/ynh_lxd"

chmod 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app:www-data "$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --weight=1

# Set Hook for nginx domain
cp -R ../sources/hooks/conf_regen/95-nginx_yunohost_demo /usr/share/yunohost/hooks/conf_regen/
yunohost tools regen-conf nginx

# Create a dedicated NGINX config
ynh_add_nginx_config
ynh_add_config --template="nginx_upstream.conf" --destination="/etc/nginx/conf.d/upstream_$app.conf"

#=================================================
# SPECIFIC SETUP
#=================================================
# CONFIGURE LXD
#=================================================
ynh_script_progression --message="Configuring LXD..." --weight=1

free_space=$(df --output=avail / | sed 1d)
btrfs_size=$(( $free_space * 90 / 100 / 1024 / 1024 ))

if [ ${FOR_PACKAGE_CHECK:-0} -eq 1 ]; then
	ynh_add_config --template="package_check_preseed.conf" --destination="$final_path/preseed.conf"
else
	ynh_add_config --template="preseed.conf" --destination="$final_path/preseed.conf"
fi

cat "$final_path/preseed.conf" | lxd init --preseed
ynh_delete_file_checksum --file="$final_path/preseed.conf"
ynh_secure_remove --file="$final_path/preseed.conf"

# app will be the one launching job, gives it permission to run lxd commands
usermod -a -G lxd $app

su $app -s /bin/bash -c "lxc remote add yunohost https://devbaseimgs.yunohost.org --public --accept-certificate"

# Configure iptables
lxdbr0_network_address=$(lxc network get lxdbr0 ipv4.address | cut -d'.' -f1-3)
mkdir -p "/etc/yunohost/hooks.d/post_iptable_rules/"
ynh_add_config --template="95-lxd-custom" --destination="/etc/yunohost/hooks.d/post_iptable_rules/95-lxd-custom"
chmod +x /etc/yunohost/hooks.d/post_iptable_rules/95-lxd-custom
/etc/yunohost/hooks.d/post_iptable_rules/95-lxd-custom

# Create the demo bridge
lxc network create $lxdbr_demo_name ipv6.address=none ipv4.address=$lxdbr_demo_network.1/24 ipv4.nat=true ipv4.dhcp.ranges=$lxdbr_demo_network.100-$lxdbr_demo_network.200

#=================================================
# BUILDING DEMO
#=================================================
ynh_script_progression --message="Building demo..." --weight=1

/bin/bash $final_path/demo_lxc_build.sh

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring permissions..." --weight=1

# Everyone can access the app.
# The "main" permission is automatically created before the install script.
ynh_permission_update --permission="main" --add="visitors"

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last

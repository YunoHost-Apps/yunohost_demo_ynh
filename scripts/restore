#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

# Keep this path for calling _common.sh inside the execution's context of backup and restore scripts
source ../settings/scripts/_common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading settings..." --weight=1

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get --app=$app --key=domain)
path_url=$(ynh_app_setting_get --app=$app --key=path)
final_path=$(ynh_app_setting_get --app=$app --key=final_path)

#=================================================
# CHECK IF THE APP CAN BE RESTORED
#=================================================
ynh_script_progression --message="Validating restoration parameters..." --weight=1

test ! -d $final_path \
	|| ynh_die --message="There is already a directory: $final_path "

#=================================================
# STANDARD RESTORATION STEPS
#=================================================
# RECREATE THE DEDICATED USER
#=================================================
ynh_script_progression --message="Recreating the dedicated system user..." --weight=1

# Create the dedicated user (if not existing)
ynh_system_user_create --username=$app --home_dir="$final_path"

#=================================================
# RESTORE THE APP MAIN DIR
#=================================================
ynh_script_progression --message="Restoring the app main directory..." --weight=1

ynh_restore_file --origin_path="$final_path"

chmod 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app:www-data "$final_path"

#=================================================
# SPECIFIC RESTORATION
#=================================================
# REINSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Reinstalling dependencies..." --weight=1

# Define and install dependencies
ynh_install_app_dependencies $pkg_dependencies
ynh_install_apps --apps="$app_dependencies"

#=================================================
# RESTORE THE NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Restoring the NGINX web server configuration..." --weight=1

ynh_restore_file --origin_path="/usr/share/yunohost/hooks/conf_regen/95-nginx_yunohost_demo"
ynh_restore_file --origin_path="/etc/nginx/conf.d/$domain.d/$app.conf"
ynh_restore_file --origin_path="/etc/nginx/conf.d/upstream_$app.conf"
yunohost tools regen-conf nginx

#=================================================
# CONFIGURE LXD
#=================================================
ynh_script_progression --message="Configuring LXD..." --weight=1

free_space=$(df --output=avail / | sed 1d)
btrfs_size=$(( $free_space * 90 / 100 / 1024 / 1024 ))

if [ ${PACKAGE_CHECK_EXEC:-0} -eq 1 ]; then
	ynh_add_config --template="package_check_preseed.conf" --destination="$final_path/preseed.conf"
else
	ynh_add_config --template="preseed.conf" --destination="$final_path/preseed.conf"
fi

cat "$final_path/preseed.conf" | lxd init --preseed
ynh_delete_file_checksum --file="$final_path/preseed.conf"
ynh_secure_remove --file="$final_path/preseed.conf"

# app will be the one launching job, gives it permission to run lxd commands
usermod -a -G lxd $app

if ! su $app -s /bin/bash -c "lxc remote list" | grep -q "devbaseimgs.yunohost.org"
then
	su $app -s /bin/bash -c "lxc remote add yunohost https://devbaseimgs.yunohost.org --public --accept-certificate"
fi

# Configure iptables
lxdbr0_network_address=$(lxc network get lxdbr0 ipv4.address | cut -d'.' -f1-3)
mkdir -p "/etc/yunohost/hooks.d/post_iptable_rules/"
ynh_add_config --template="95-lxd-custom" --destination="/etc/yunohost/hooks.d/post_iptable_rules/95-lxd-custom"
chmod +x /etc/yunohost/hooks.d/post_iptable_rules/95-lxd-custom
/etc/yunohost/hooks.d/post_iptable_rules/95-lxd-custom

# Create the demo bridge
lxc network create $lxdbr_demo_name ipv6.address=none ipv4.address=$lxdbr_demo_network.1/24 ipv4.nat=true ipv4.dhcp.ranges=$lxdbr_demo_network.100-$lxdbr_demo_network.200

#=================================================
# BUILDING DEMO
#=================================================
ynh_script_progression --message="Building demo..." --weight=1

/bin/bash $final_path/demo_lxc_build.sh

#=================================================
# GENERIC FINALIZATION
#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Restoration completed for $app" --last
